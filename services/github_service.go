package services

import (
	"bytes"
	"encoding/json"
	"fmt"
	"net/http"
	"os"
)

type GitHubRepo struct {
	Name        string `json:"name"`
	Description string `json:"description,omitempty"`
	Private     bool   `json:"private"`
	AutoInit    bool   `json:"auto_init"`
	Owner       string `json:"owner"`
}

func CreateGitHubRepo(repoName string, token string) (string, error) {
	apiURL := "https://api.github.com/orgs/" + os.Getenv("GITHUB_OWNER") + "/repos"
	repo := GitHubRepo{
		Name:        repoName,
		Owner:       os.Getenv("GITHUB_OWNER"),
		Description: "Generated by Packlify",
		Private:     true,
		AutoInit:    false,
	}

	payload, _ := json.Marshal(&repo)

	req, _ := http.NewRequest("POST", apiURL, bytes.NewBuffer(payload))
	req.Header.Set("Authorization", "token "+token)
	req.Header.Set("Content-Type", "application/json")

	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		return "", err
	}
	defer resp.Body.Close()

	var result map[string]interface{}
	json.NewDecoder(resp.Body).Decode(&result)

	if resp.StatusCode != 201 {
		return "", fmt.Errorf("GitHub repo creation failed: %v", result)
	}

	return result["clone_url"].(string), nil
}
